{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\IndependentProject\\\\DrumMachine\\\\client\\\\src\\\\components\\\\DrumButton.jsx\",\n  _s = $RefreshSig$();\nimport { React, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrumButton = ({\n  text,\n  audio,\n  altAudio,\n  getVolume,\n  getPower,\n  getBank,\n  audioText,\n  altAudioText,\n  setText\n}) => {\n  _s();\n  const id = `drumButton${text}`;\n  let pushed = false;\n  const handleClick = () => {\n    audio.volume = getVolume;\n    altAudio.volume = getVolume;\n    if (getPower) {\n      if (!getBank) {\n        if (audio.paused) {\n          audio.play();\n        } else {\n          audio.currentTime = 0;\n        }\n        setText(audioText);\n      } else {\n        if (altAudio.paused) {\n          altAudio.play();\n        } else {\n          altAudio.currentTime = 0;\n        }\n        setText(altAudioText);\n      }\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"keydown\", function (event) {\n      if (event.key.toUpperCase() == text) {\n        if (!pushed) {\n          console.log(event);\n          event.preventDefault();\n          //handleClick();\n          document.getElementById(`drumButton${text}`).click();\n          //document.getElementById(`drumButton`).click();\n        }\n\n        pushed = !pushed;\n        console.log(pushed);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drumButton\",\n    tabIndex: \"1\",\n    id: id,\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DrumButton, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DrumButton;\nexport default DrumButton;\nvar _c;\n$RefreshReg$(_c, \"DrumButton\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","DrumButton","text","audio","altAudio","getVolume","getPower","getBank","audioText","altAudioText","setText","_s","id","pushed","handleClick","volume","paused","play","currentTime","document","addEventListener","event","key","toUpperCase","console","log","preventDefault","getElementById","click","className","tabIndex","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Other/IndependentProject/DrumMachine/client/src/components/DrumButton.jsx"],"sourcesContent":["import { React, useEffect } from 'react'\r\n\r\nconst DrumButton = ({text, audio, altAudio, getVolume, getPower, getBank, audioText, altAudioText, setText}) => {\r\n  const id = `drumButton${text}`\r\n  let pushed = false;\r\n  const handleClick = () => {\r\n    audio.volume = getVolume;\r\n    altAudio.volume = getVolume;\r\n    if(getPower){\r\n      if(!getBank){\r\n        if (audio.paused) {\r\n          audio.play();\r\n        }else{\r\n          audio.currentTime = 0\r\n        }\r\n        setText(audioText)\r\n      } else {\r\n        if (altAudio.paused) {\r\n          altAudio.play();\r\n        }else{\r\n          altAudio.currentTime = 0\r\n        }\r\n        setText(altAudioText)\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", function(event) {\r\n      if (event.key.toUpperCase() == text) {\r\n        if(!pushed){\r\n          console.log(event)\r\n        event.preventDefault();\r\n        //handleClick();\r\n        document.getElementById(`drumButton${text}`).click();\r\n        //document.getElementById(`drumButton`).click();\r\n        } \r\n        pushed = !pushed\r\n        console.log(pushed)\r\n      }\r\n    })\r\n  }, []);\r\n  return (\r\n    <div className='drumButton' tabIndex=\"1\" id={id} onClick={handleClick}>\r\n        {text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DrumButton"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAACC,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC9G,MAAMC,EAAE,GAAI,aAAYV,IAAK,EAAC;EAC9B,IAAIW,MAAM,GAAG,KAAK;EAClB,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBX,KAAK,CAACY,MAAM,GAAGV,SAAS;IACxBD,QAAQ,CAACW,MAAM,GAAGV,SAAS;IAC3B,IAAGC,QAAQ,EAAC;MACV,IAAG,CAACC,OAAO,EAAC;QACV,IAAIJ,KAAK,CAACa,MAAM,EAAE;UAChBb,KAAK,CAACc,IAAI,CAAC,CAAC;QACd,CAAC,MAAI;UACHd,KAAK,CAACe,WAAW,GAAG,CAAC;QACvB;QACAR,OAAO,CAACF,SAAS,CAAC;MACpB,CAAC,MAAM;QACL,IAAIJ,QAAQ,CAACY,MAAM,EAAE;UACnBZ,QAAQ,CAACa,IAAI,CAAC,CAAC;QACjB,CAAC,MAAI;UACHb,QAAQ,CAACc,WAAW,GAAG,CAAC;QAC1B;QACAR,OAAO,CAACD,YAAY,CAAC;MACvB;IACF;EACF,CAAC;EACDX,SAAS,CAAC,MAAM;IACdqB,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAE,UAASC,KAAK,EAAE;MACnD,IAAIA,KAAK,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC,IAAIrB,IAAI,EAAE;QACnC,IAAG,CAACW,MAAM,EAAC;UACTW,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;UACpBA,KAAK,CAACK,cAAc,CAAC,CAAC;UACtB;UACAP,QAAQ,CAACQ,cAAc,CAAE,aAAYzB,IAAK,EAAC,CAAC,CAAC0B,KAAK,CAAC,CAAC;UACpD;QACA;;QACAf,MAAM,GAAG,CAACA,MAAM;QAChBW,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;MACrB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACEb,OAAA;IAAK6B,SAAS,EAAC,YAAY;IAACC,QAAQ,EAAC,GAAG;IAAClB,EAAE,EAAEA,EAAG;IAACmB,OAAO,EAAEjB,WAAY;IAAAkB,QAAA,EACjE9B;EAAI;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAzB,EAAA,CA5CKV,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AA8ChB,eAAeA,UAAU;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}