{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\IndependentProject\\\\DrumMachine\\\\client\\\\src\\\\components\\\\DrumButton.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drumButton = ({\n  text,\n  audio,\n  altAudio,\n  getVolume,\n  getPower,\n  getBank,\n  audioText,\n  altAudioText,\n  setText\n}) => {\n  const handleClick = () => {\n    audio.volume = getVolume;\n    if (getPower) {\n      if (!getBank) {\n        audio.play();\n        setText(audioText);\n      } else {\n        altAudio.play();\n        setText(altAudioText);\n      }\n    }\n  };\n  document.addEventListener(\"keypress\", function (event) {\n    console.log(\"step 1\");\n    console.log(text);\n    console.log(event.key);\n    if (event.key.toUpperCase() == text) {\n      event.preventDefault();\n      console.log(\"step 2\");\n      document.getElementById(\"drumButton\").click();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drumButton\",\n    id: \"drumButton\",\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\nexport default drumButton;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","drumButton","text","audio","altAudio","getVolume","getPower","getBank","audioText","altAudioText","setText","handleClick","volume","play","document","addEventListener","event","console","log","key","toUpperCase","preventDefault","getElementById","click","className","id","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Other/IndependentProject/DrumMachine/client/src/components/DrumButton.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst drumButton = ({text, audio, altAudio, getVolume, getPower, getBank, audioText, altAudioText, setText}) => {\r\n  const handleClick = () => {\r\n    audio.volume = getVolume;\r\n    if(getPower){\r\n      if(!getBank){\r\n        audio.play();\r\n        setText(audioText)\r\n      } else {\r\n        altAudio.play();\r\n        setText(altAudioText)\r\n      }\r\n    }\r\n  }\r\n  document.addEventListener(\"keypress\", function(event) {\r\n    console.log(\"step 1\")\r\n    console.log(text)\r\n    console.log(event.key)\r\n    if (event.key.toUpperCase() == text) {\r\n      event.preventDefault();\r\n      console.log(\"step 2\")\r\n      document.getElementById(\"drumButton\").click();\r\n    }\r\n  });\r\n  return (\r\n    <div className='drumButton' id='drumButton' onClick={handleClick}>\r\n        {text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default drumButton"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,UAAU,GAAGA,CAAC;EAACC,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAO,CAAC,KAAK;EAC9G,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBR,KAAK,CAACS,MAAM,GAAGP,SAAS;IACxB,IAAGC,QAAQ,EAAC;MACV,IAAG,CAACC,OAAO,EAAC;QACVJ,KAAK,CAACU,IAAI,CAAC,CAAC;QACZH,OAAO,CAACF,SAAS,CAAC;MACpB,CAAC,MAAM;QACLJ,QAAQ,CAACS,IAAI,CAAC,CAAC;QACfH,OAAO,CAACD,YAAY,CAAC;MACvB;IACF;EACF,CAAC;EACDK,QAAQ,CAACC,gBAAgB,CAAC,UAAU,EAAE,UAASC,KAAK,EAAE;IACpDC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;IACjBe,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,GAAG,CAAC;IACtB,IAAIH,KAAK,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,IAAIlB,IAAI,EAAE;MACnCc,KAAK,CAACK,cAAc,CAAC,CAAC;MACtBJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBJ,QAAQ,CAACQ,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK,CAAC,CAAC;IAC/C;EACF,CAAC,CAAC;EACF,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,YAAY;IAACC,EAAE,EAAC,YAAY;IAACC,OAAO,EAAEf,WAAY;IAAAgB,QAAA,EAC5DzB;EAAI;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAED,eAAe9B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}