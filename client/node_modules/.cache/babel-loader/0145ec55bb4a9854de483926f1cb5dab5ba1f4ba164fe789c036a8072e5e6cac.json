{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\IndependentProject\\\\DrumMachine\\\\client\\\\src\\\\components\\\\Toggle.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toggle = ({\n  power,\n  setState,\n  getState,\n  isBank,\n  setText\n}) => {\n  _s();\n  const [isChecked, setIsChecked] = useState(power);\n  const checkHandler = () => {\n    setIsChecked(!isChecked);\n    setState(!getState);\n    if (isBank) {\n      if (getState) {\n        setText(\"Heater Kit\");\n      } else {\n        setText(\"Smooth Piano Kit\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"checkbox\",\n        onChange: checkHandler,\n        checked: isChecked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"sliderToggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Toggle, \"ALw1yI8HslOEybmKA5P1uQHoXkY=\");\n_c = Toggle;\nexport default Toggle;\nvar _c;\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Toggle","power","setState","getState","isBank","setText","_s","isChecked","setIsChecked","checkHandler","className","children","class","type","id","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Other/IndependentProject/DrumMachine/client/src/components/Toggle.jsx"],"sourcesContent":["import { React, useState }from 'react'\r\n\r\nconst Toggle = ({power, setState, getState, isBank, setText}) => {\r\n  const [isChecked, setIsChecked] = useState(power)\r\n  \r\n  const checkHandler = () => {\r\n    setIsChecked(!isChecked)\r\n    setState(!getState)\r\n    if(isBank){\r\n      if(getState){\r\n        setText(\"Heater Kit\")\r\n      } else {\r\n        setText(\"Smooth Piano Kit\")\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className='toggle'>\r\n        <label class=\"switch\">\r\n          <input type=\"checkbox\" id='checkbox' onChange={checkHandler} checked={isChecked}/>\r\n          <span class=\"sliderToggle\"/>\r\n        </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Toggle"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAC;EAACC,KAAK;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAACI,KAAK,CAAC;EAEjD,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBD,YAAY,CAAC,CAACD,SAAS,CAAC;IACxBL,QAAQ,CAAC,CAACC,QAAQ,CAAC;IACnB,IAAGC,MAAM,EAAC;MACR,IAAGD,QAAQ,EAAC;QACVE,OAAO,CAAC,YAAY,CAAC;MACvB,CAAC,MAAM;QACLA,OAAO,CAAC,kBAAkB,CAAC;MAC7B;IACF;EACF,CAAC;EACD,oBACEN,OAAA;IAAKW,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBZ,OAAA;MAAOa,KAAK,EAAC,QAAQ;MAAAD,QAAA,gBACnBZ,OAAA;QAAOc,IAAI,EAAC,UAAU;QAACC,EAAE,EAAC,UAAU;QAACC,QAAQ,EAAEN,YAAa;QAACO,OAAO,EAAET;MAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClFrB,OAAA;QAAMa,KAAK,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAAd,EAAA,CAtBKN,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAwBZ,eAAeA,MAAM;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}